# Script para Atualizar Backend na DigitalOcean
# Brand√£o Contador NFe System

Write-Host "üöÄ ATUALIZANDO BACKEND NA DIGITALOCEAN" -ForegroundColor Cyan
Write-Host "=====================================" -ForegroundColor Cyan
Write-Host ""

# Configura√ß√µes
$SERVER_IP = "159.89.228.223"
$SSH_PORT = "2222"
$SSH_KEY = "C:/Users/BCNOTSONY/.ssh/id_ed25519"
$APP_DIR = "/var/www/brandaocontador-nfe-backend"

Write-Host "üìã Informa√ß√µes do Servidor:" -ForegroundColor Yellow
Write-Host "- IP: $SERVER_IP" -ForegroundColor White
Write-Host "- Porta SSH: $SSH_PORT" -ForegroundColor White
Write-Host "- Diret√≥rio: $APP_DIR" -ForegroundColor White
Write-Host ""

# Fun√ß√£o para executar comando SSH
function Invoke-SSHCommand {
    param(
        [string]$Command,
        [string]$Description
    )
    
    Write-Host "üîÑ $Description..." -ForegroundColor Blue
    
    $sshCommand = "ssh -i `"$SSH_KEY`" -p $SSH_PORT root@$SERVER_IP `"$Command`""
    
    try {
        $result = Invoke-Expression $sshCommand
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ $Description - Conclu√≠do" -ForegroundColor Green
            return $result
        } else {
            Write-Host "‚ùå $Description - Erro (Exit Code: $LASTEXITCODE)" -ForegroundColor Red
            return $null
        }
    }
    catch {
        Write-Host "‚ùå $Description - Erro: $($_.Exception.Message)" -ForegroundColor Red
        return $null
    }
}

# Verificar conectividade
Write-Host "üîç Verificando conectividade com o servidor..." -ForegroundColor Yellow
$connectTest = Invoke-SSHCommand "echo 'Conex√£o SSH OK'" "Teste de conectividade"

if (-not $connectTest) {
    Write-Host ""
    Write-Host "‚ùå N√£o foi poss√≠vel conectar ao servidor!" -ForegroundColor Red
    Write-Host "üí° Verifique se:" -ForegroundColor Yellow
    Write-Host "   - A chave SSH est√° no caminho correto: $SSH_KEY" -ForegroundColor White
    Write-Host "   - O servidor est√° online e acess√≠vel" -ForegroundColor White
    Write-Host "   - A porta SSH $SSH_PORT est√° aberta" -ForegroundColor White
    Write-Host ""
    Write-Host "üîß Para conectar manualmente:" -ForegroundColor Cyan
    Write-Host "   ssh -i `"$SSH_KEY`" -p $SSH_PORT root@$SERVER_IP" -ForegroundColor White
    exit 1
}

Write-Host ""
Write-Host "‚úÖ Conectividade OK! Iniciando atualiza√ß√£o..." -ForegroundColor Green
Write-Host ""

# Verificar status atual
Write-Host "üìä Verificando status atual do sistema..." -ForegroundColor Yellow
$statusCheck = Invoke-SSHCommand "cd $APP_DIR && pwd && ls -la" "Verifica√ß√£o do diret√≥rio da aplica√ß√£o"

# Verificar PM2
$pm2Status = Invoke-SSHCommand "pm2 list" "Status do PM2"

# Fazer backup do .env
Write-Host ""
Write-Host "üíæ Fazendo backup das configura√ß√µes..." -ForegroundColor Yellow
$backupEnv = Invoke-SSHCommand "cd $APP_DIR && cp .env .env.backup.$(date +%Y%m%d_%H%M%S)" "Backup do arquivo .env"

# Atualizar c√≥digo do reposit√≥rio
Write-Host ""
Write-Host "üì• Atualizando c√≥digo do GitHub..." -ForegroundColor Yellow
$gitPull = Invoke-SSHCommand "cd $APP_DIR && git fetch origin && git reset --hard origin/main" "Atualiza√ß√£o do c√≥digo"

# Instalar/atualizar depend√™ncias
Write-Host ""
Write-Host "üì¶ Instalando depend√™ncias..." -ForegroundColor Yellow
$npmInstall = Invoke-SSHCommand "cd $APP_DIR && npm install --production" "Instala√ß√£o de depend√™ncias"

# Reiniciar aplica√ß√£o com PM2
Write-Host ""
Write-Host "üîÑ Reiniciando aplica√ß√£o..." -ForegroundColor Yellow
$pm2Restart = Invoke-SSHCommand "pm2 restart brandaocontador-nfe-backend" "Reinicializa√ß√£o da aplica√ß√£o"

# Verificar se a aplica√ß√£o est√° rodando
Write-Host ""
Write-Host "üîç Verificando status da aplica√ß√£o..." -ForegroundColor Yellow
Start-Sleep -Seconds 5
$pm2Status = Invoke-SSHCommand "pm2 list | grep brandaocontador-nfe-backend" "Status final da aplica√ß√£o"

# Testar API
Write-Host ""
Write-Host "üåê Testando conectividade da API..." -ForegroundColor Yellow
try {
    $apiTest = Invoke-WebRequest -Uri "https://api.brandaocontador.com.br/" -Method GET -TimeoutSec 10 -ErrorAction SilentlyContinue
    if ($apiTest.StatusCode -eq 404) {
        Write-Host "‚úÖ API respondendo (404 √© esperado para rota raiz)" -ForegroundColor Green
    } else {
        Write-Host "‚úÖ API respondendo (Status: $($apiTest.StatusCode))" -ForegroundColor Green
    }
}
catch {
    Write-Host "‚ö†Ô∏è  API pode estar inicializando ainda..." -ForegroundColor Yellow
    Write-Host "   Aguarde alguns minutos e teste novamente" -ForegroundColor White
}

# Mostrar logs recentes
Write-Host ""
Write-Host "üìã Logs recentes da aplica√ß√£o:" -ForegroundColor Yellow
$recentLogs = Invoke-SSHCommand "pm2 logs brandaocontador-nfe-backend --lines 10 --nostream" "Logs da aplica√ß√£o"

Write-Host ""
Write-Host "üéâ ATUALIZA√á√ÉO CONCLU√çDA!" -ForegroundColor Green
Write-Host "========================" -ForegroundColor Green
Write-Host ""
Write-Host "üìä Resumo da atualiza√ß√£o:" -ForegroundColor Cyan
Write-Host "- ‚úÖ C√≥digo atualizado do GitHub" -ForegroundColor White
Write-Host "- ‚úÖ Depend√™ncias instaladas" -ForegroundColor White
Write-Host "- ‚úÖ Aplica√ß√£o reiniciada" -ForegroundColor White
Write-Host "- ‚úÖ Backup do .env criado" -ForegroundColor White
Write-Host ""
Write-Host "üîó URLs para testar:" -ForegroundColor Cyan
Write-Host "- Frontend: https://nfe.brandaocontador.com.br" -ForegroundColor White
Write-Host "- Backend: https://api.brandaocontador.com.br" -ForegroundColor White
Write-Host ""
Write-Host "üîß Comandos √∫teis para monitoramento:" -ForegroundColor Cyan
Write-Host "- Ver logs: ssh -i `"$SSH_KEY`" -p $SSH_PORT root@$SERVER_IP `"pm2 logs brandaocontador-nfe-backend`"" -ForegroundColor White
Write-Host "- Status PM2: ssh -i `"$SSH_KEY`" -p $SSH_PORT root@$SERVER_IP `"pm2 list`"" -ForegroundColor White
Write-Host "- Reiniciar: ssh -i `"$SSH_KEY`" -p $SSH_PORT root@$SERVER_IP `"pm2 restart brandaocontador-nfe-backend`"" -ForegroundColor White
Write-Host ""
Write-Host "üí° Se houver problemas, verifique os logs e a documenta√ß√£o em:" -ForegroundColor Yellow
Write-Host "   DOCUMENTACAO_COMPLETA_SERVICOS.md" -ForegroundColor White