name: Manual Deploy Frontend

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch para deploy"
        required: false
        default: "main"

env:
  NODE_VERSION: '20'

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    # Executa manualmente ou em push com flag [deploy-frontend]
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && contains(github.event.head_commit.message, '[deploy-frontend]'))
    steps:
      - name: Checkout frontend repository
        uses: actions/checkout@v4
        with:
          repository: arroschaves/brandaocontador-nfe-frontend
          ref: main
          path: frontend
          token: ${{ secrets.GH_PAT_CHECKOUT || github.token }}
          fetch-depth: 1
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies - Frontend
        continue-on-error: true
        run: |
          cd frontend
          npm ci

      - name: Lint and Build frontend
        continue-on-error: true
        run: |
          cd frontend
          npm run lint
          npm run build

  deploy-frontend:
    needs: test-frontend
    runs-on: ubuntu-latest
    # Executa manualmente ou em push com flag [deploy-frontend]
    if: always() && (github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && contains(github.event.head_commit.message, '[deploy-frontend]')))
    steps:
      - name: Checkout frontend repository
        uses: actions/checkout@v4
        with:
          repository: arroschaves/brandaocontador-nfe-frontend
          ref: main
          path: frontend
          token: ${{ secrets.GH_PAT_CHECKOUT || github.token }}
          fetch-depth: 1
          persist-credentials: true

      - name: Validate Vercel credentials
        id: check_vercel_secrets
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          MISSING=""
          [ -z "$VERCEL_TOKEN" ] && MISSING="$MISSING VERCEL_TOKEN"
          [ -z "$VERCEL_ORG_ID" ] && MISSING="$MISSING VERCEL_ORG_ID"
          [ -z "$VERCEL_PROJECT_ID" ] && MISSING="$MISSING VERCEL_PROJECT_ID"
          if [ -n "$MISSING" ]; then
            echo "missing=true" >> $GITHUB_OUTPUT
            echo "[ERRO] Secrets ausentes:$MISSING" >> $GITHUB_STEP_SUMMARY
            echo "Vercel Action será pulada. Tentando Deploy Hook se disponível." >> $GITHUB_STEP_SUMMARY
          else
            echo "missing=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Vercel (vercel-action)
        id: vercel_action
        uses: amondnet/vercel-action@v25
        if: ${{ steps.check_vercel_secrets.outputs.missing != 'true' }}
        continue-on-error: true
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ github.token }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend

      - name: Deploy via Vercel Deploy Hook
        id: deploy_hook
        if: ${{ steps.vercel_action.outcome == 'failure' || steps.check_vercel_secrets.outputs.missing == 'true' }}
        continue-on-error: true
        env:
          HOOK_URL_SECRET: ${{ secrets.VERCEL_DEPLOY_HOOK_URL }}
          HOOK_URL_VAR: ${{ vars.VERCEL_DEPLOY_HOOK_URL }}
        run: |
          HOOK_URL="${HOOK_URL_SECRET:-$HOOK_URL_VAR}"
          if [ -z "$HOOK_URL" ]; then
            echo "VERCEL_DEPLOY_HOOK_URL não configurado (secret ou var). Pulando fallback."
            exit 1
          fi
          echo "Disparando Deploy Hook do Vercel..."
          curl -X POST "$HOOK_URL"

      # Novo fallback: empurra commit vazio no repositório frontend para gatilhar Vercel via GitHub
      - name: Push empty commit to frontend repo (fallback trigger)
        if: ${{ steps.vercel_action.outcome != 'success' }}
        continue-on-error: true
        run: |
          cd frontend
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit --allow-empty -m "[deploy-frontend] Bump via workflow"
          git push origin HEAD:main

      - name: Fail if no deploy method succeeded
        if: ${{ (steps.vercel_action.outcome != 'success') && (steps.deploy_hook.outcome != 'success') }}
        run: |
          echo "Falha: nenhum método de deploy (Action/Hook) foi bem-sucedido."
          exit 1