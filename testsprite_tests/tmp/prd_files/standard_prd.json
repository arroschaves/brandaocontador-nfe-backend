{
  "meta": {
    "project": "Sistema NFe Brandão Contador",
    "date": "2025-10-04",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "Sistema NFe Brandão Contador é uma plataforma web para emissão, gerenciamento e controle de Notas Fiscais Eletrônicas (NFe) voltada para contadores, integrando frontend em React com backend Node.js e serviços robustos para autenticação, administração e saúde do sistema.",
  "core_goals": [
    "Permitir emissão segura e correta de NFes com validação de certificados digitais.",
    "Fornecer histórico completo e consulta das NFes emitidas pelos usuários.",
    "Garantir autenticação segura via JWT para acesso ao sistema.",
    "Prover endpoints administrativos para gerenciamento de usuários, limpeza de banco e estatísticas.",
    "Assegurar alta disponibilidade e monitoramento da saúde do sistema e suas dependências.",
    "Oferecer deploys automatizados e processos claros para manutenção e evolução.",
    "Garantir segurança na comunicação via SSL e políticas de CORS bem definidas."
  ],
  "key_features": [
    "APIs de Health para monitoramento básico e detalhado do sistema.",
    "API de autenticação com registro, login e emissão de tokens JWT.",
    "APIs de emissão e consulta de Notas Fiscais Eletrônicas com requisito de certificado digital.",
    "APIs administrativas para listagem de usuários, limpeza do banco de dados e estatísticas do sistema.",
    "Infraestrutura completa com backend em Node.js e Express, banco baseado em MongoDB/SQLite e frontend em React + TypeScript.",
    "Deploy automatizado no frontend via Vercel e backend via scripts no servidor DigitalOcean.",
    "Configurações avançadas de DNS e CDN via Cloudflare com SSL Full strict e cache configurado para otimização."
  ],
  "user_flow_summary": [
    "Usuário acessa o frontend pela URL oficial e pode se registrar criando conta com nome, email e senha.",
    "Usuário faz login via autenticação JWT para obter token de acesso para as demais operações.",
    "Usuário consulta histórico de NFes emitidas via endpoint /nfe/historico.",
    "Para emissão de NFe o usuário submete requisição autenticada com certificado digital válido para endpoint /nfe/emissao.",
    "Administrador com permissão acessa endpoints administrativos para visualizar usuários, limpar banco de dados e consultar estatísticas.",
    "DevOps realiza deploy do frontend no Vercel automaticamente após push no branch main.",
    "DevOps realiza deploy manual do backend no servidor DigitalOcean via scripts de atualização e verifica logs e saúde do sistema."
  ],
  "validation_criteria": [
    "Todas as APIs de healthcheck devem responder com status 200 e dados válidos do sistema e memória.",
    "Autenticação deve rejeitar credenciais inválidas e emitir token JWT válido para credenciais corretas.",
    "Emissão de NFe deve falhar caso certificado digital seja ausente ou inválido.",
    "Admin APIs devem retornar dados corretos para listagem de usuários, limpeza e estatísticas com logs apropriados.",
    "Frontend deve estar disponível em URL personalizada e consumir API backend com variáveis ambiente configuradas.",
    "Deploys frontend e backend devem completar sem erros e aplicações devem reiniciar via PM2.",
    "Configurações de SSL, CORS e DNS devem estar ativas durante testes de segurança e regulagem de cache."
  ],
  "code_summary": {
    "tech_stack": [
      "Node.js",
      "Express",
      "MongoDB",
      "Mongoose",
      "JWT",
      "PM2",
      "Docker",
      "Nginx"
    ],
    "features": [
      {
        "name": "Health APIs",
        "description": "Endpoints para verificar saúde da aplicação e status de dependências.",
        "files": [
          "backend/app-real.js",
          "backend/healthcheck.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Health API",
            "version": "1.0.0"
          },
          "paths": {
            "/health": {
              "get": {
                "summary": "Status básico da aplicação",
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/admin/health": {
              "get": {
                "summary": "Status detalhado com memória e uptime",
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Auth APIs",
        "description": "Autenticação com JWT: login, registro e verificação.",
        "files": [
          "backend/middleware/auth-real.js",
          "backend/services/auth-service.js",
          "backend/models/Usuario.js",
          "backend/app-real.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Auth API",
            "version": "1.0.0"
          },
          "paths": {
            "/auth/login": {
              "post": {
                "summary": "Login com email e senha",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "senha": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "email",
                          "senha"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Token JWT"
                  },
                  "401": {
                    "description": "Credenciais inválidas"
                  }
                }
              }
            },
            "/auth/register": {
              "post": {
                "summary": "Registro de novo usuário",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "nome": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "senha": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "nome",
                          "email",
                          "senha"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Usuário criado"
                  },
                  "400": {
                    "description": "Erro de validação"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "NFe APIs",
        "description": "Histórico e operações de NFe; emissão real exige certificado.",
        "files": [
          "backend/app-real.js",
          "backend/services/nfe-service.js",
          "backend/services/validation-service.js",
          "backend/validate-certificate-sefaz.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "NFe API",
            "version": "1.0.0"
          },
          "paths": {
            "/nfe/historico": {
              "get": {
                "summary": "Listar histórico de NFes",
                "responses": {
                  "200": {
                    "description": "Lista de NFes"
                  }
                }
              }
            },
            "/nfe/emissao": {
              "post": {
                "summary": "Emitir NFe (requer certificado)",
                "responses": {
                  "200": {
                    "description": "NFe enviada"
                  },
                  "400": {
                    "description": "Certificado ausente ou inválido"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Admin APIs",
        "description": "Operações administrativas: usuários, limpeza de banco e estatísticas.",
        "files": [
          "backend/app-real.js",
          "backend/services/log-service.js",
          "backend/config/database.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Admin API",
            "version": "1.0.0"
          },
          "paths": {
            "/admin/usuarios": {
              "get": {
                "summary": "Listar usuários",
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/admin/limpar-banco": {
              "post": {
                "summary": "Limpar banco",
                "responses": {
                  "200": {
                    "description": "Limpo"
                  },
                  "500": {
                    "description": "Erro"
                  }
                }
              }
            },
            "/admin/stats": {
              "get": {
                "summary": "Estatísticas",
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            }
          }
        }
      }
    ]
  }
}
