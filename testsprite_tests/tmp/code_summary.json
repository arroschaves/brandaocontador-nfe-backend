{
  "tech_stack": [
    "TypeScript",
    "React (Vite)",
    "Tailwind CSS",
    "Axios",
    "React Router",
    "Node.js",
    "Express",
    "MongoDB (Mongoose)",
    "mongodb-memory-server",
    "JWT (jsonwebtoken)",
    "bcryptjs",
    "Multer",
    "Nodemailer",
    "xml2js",
    "xml-crypto",
    "node-forge"
  ],
  "features": [
    {
      "name": "Frontend App Entrypoint",
      "description": "Boot do app, rotas protegidas, layout principal e banner de status do backend.",
      "files": [
        "frontend/src/main.tsx",
        "frontend/src/App.tsx",
        "frontend/src/components/Layout.tsx",
        "frontend/src/components/ProtectedRoute.tsx"
      ]
    },
    {
      "name": "Auth Context & Hooks",
      "description": "Gerencia autenticação, token em localStorage, refresh e permissões.",
      "files": [
        "frontend/src/contexts/AuthContext.tsx",
        "frontend/src/hooks/useAuth.ts"
      ]
    },
    {
      "name": "API Client & Config",
      "description": "Cliente HTTP com Axios, baseURL por ambiente e serviços para auth/NFe/config.",
      "files": [
        "frontend/src/services/api.ts",
        "frontend/src/config/api.ts"
      ]
    },
    {
      "name": "UI & Layout Components",
      "description": "Componentes de UI e layout (inclui Sidebar e utilitários visuais).",
      "files": [
        "frontend/src/components/layout/Sidebar.tsx",
        "frontend/src/components/ui/*"
      ]
    },
    {
      "name": "Pages – Clientes",
      "description": "Listagem, cadastro e edição de clientes com endereço e Inscrição Estadual.",
      "files": [
        "frontend/src/pages/Clientes.tsx"
      ]
    },
    {
      "name": "Pages – Produtos",
      "description": "Cadastro/edição de produtos com campos fiscais (CST, Tipo de Tributação, Origem).",
      "files": [
        "frontend/src/pages/Produtos.tsx"
      ]
    },
    {
      "name": "Pages – Configurações",
      "description": "Configurações de NFe e upload de certificado digital (label aponta para input).",
      "files": [
        "frontend/src/pages/Configuracoes.tsx"
      ]
    },
    {
      "name": "Pages – Emissão/Consulta NFe",
      "description": "Fluxos de emissão, validação e consulta de NFe.",
      "files": [
        "frontend/src/pages/EmitirNFe.tsx",
        "frontend/src/pages/ConsultarNFe.tsx",
        "frontend/src/hooks/useNFe.ts"
      ]
    },
    {
      "name": "Pages – Dashboard & Cadastro",
      "description": "Páginas auxiliares de overview e cadastro de empresa.",
      "files": [
        "frontend/src/pages/Dashboard.tsx",
        "frontend/src/pages/Cadastro.tsx"
      ]
    },
    {
      "name": "Frontend Utils",
      "description": "Helpers gerais e utilitários de ambiente.",
      "files": [
        "frontend/src/utils/index.ts",
        "frontend/src/lib/utils.ts"
      ]
    },
    {
      "name": "Backend – Servidor Express (Real)",
      "description": "Servidor completo com autenticação real, semeadura de usuários, endpoints NFe/Clientes/Produtos/Config.",
      "files": [
        "backend/app-real.js",
        "backend/middleware/auth-real.js",
        "backend/services/auth-service.js",
        "backend/models/Usuario.js",
        "backend/models/Cliente.js",
        "backend/models/Produto.js",
        "backend/models/Configuracao.js",
        "backend/config/database.js"
      ]
    },
    {
      "name": "Backend – Servidor Express (Simples)",
      "description": "Servidor alternativo com banco JSON e autenticação simplificada.",
      "files": [
        "backend/app-simples.js",
        "backend/middleware/auth-simples.js",
        "backend/config/database-simples.js",
        "backend/data/database.json"
      ]
    },
    {
      "name": "Backend – NFe Services",
      "description": "Serviços de NFe: validação, emissão, histórico, download e integração certificada.",
      "files": [
        "backend/services/nfe-service.js",
        "backend/services/validation-service.js",
        "backend/services/certificate-service.js"
      ]
    },
    {
      "name": "Backend – Admin & Health",
      "description": "Endpoints administrativos, limpeza de banco, health check e versão.",
      "files": [
        "backend/app-real.js",
        "backend/scripts/seed-users.js"
      ]
    },
    {
      "name": "Testsprite – Test Plan & Cases",
      "description": "Plano de testes e casos (login, admin usuários, frontend acesso, rotas inválidas).",
      "files": [
        "testsprite_tests/testsprite_frontend_test_plan.json",
        "testsprite_tests/TC004_auth_login_should_accept_valid_credentials_and_return_jwt_token.py",
        "testsprite_tests/TC006_auth_register_should_reject_invalid_data_and_return_400.py",
        "testsprite_tests/TC010_admin_usuarios_should_return_user_list_with_status_200.py",
        "testsprite_tests/TC012_Admin_Get_System_Statistics_API_Success.py",
        "testsprite_tests/TC013_Frontend_Access_and_API_Consumption.py",
        "testsprite_tests/TC017_Error_Handling_on_Backend_with_Invalid_API_Routes.py"
      ]
    }
  ]
}